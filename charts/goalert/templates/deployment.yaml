apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "goalert.fullname" . }}
  labels:
    {{- include "goalert.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "goalert.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "goalert.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "goalert.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- if .Values.goalert.existingSecret.name }}
            {{- range $key, $value := .Values.goalert.existingSecret.keys }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.goalert.existingSecret.name }}
                  key: {{ $value }}
            {{- end }}
            {{- else }}
            - name: GOALERT_DB_URL
              value: {{ include "goalert.databaseUrl" . | quote }}
            - name: GOALERT_DATA_ENCRYPTION_KEY
              value: {{ .Values.goalert.environment.GOALERT_DATA_ENCRYPTION_KEY | quote }}
            {{- end }}
            {{- if and (.Values.extraEnv) (gt (len .Values.extraEnv) 0) }}
            {{- .Values.extraEnv | toYaml | nindent 12 }}
            {{- end }}
          {{- if and (.Values.extraEnvFrom) (gt (len .Values.extraEnvFrom) 0) }}
          envFrom:
            {{- range .Values.extraEnvFrom }}
            - {{ .type }}:
                name: {{ .name }}
            {{- end }}
          {{- end}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}