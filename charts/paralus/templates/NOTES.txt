1. Access the application URL by running these commands:
{{- if .Values.ingress.enabled }}
  Open {{ include "ztka.consoleFQDNWithScheme" . }} in browser.
{{- else if .Values.deploy.contour.enable }}
  Get the EXTERNAL-IP value using following command:
  kubectl get service {{ .Release.Name }}-contour-envoy -n {{ .Release.Namespace }}

  Add DNS records of following domains such that it resolves to above <EXTERNAL-IP> value:
  - {{ include "ztka.consoleFQDN" . }}
  - {{ include "ztka.coreConnectorFQDN" . }}
  - {{ include "ztka.userFQDN" . }}

  Open {{ include "ztka.consoleFQDNWithScheme" . }} in browser.

  Note: If you are using a cluster with no load-balancer, then the address will be "<pending>".
        If it is Kind or Minikube cluster, check out respective docs to get the external address.
{{- else if contains "NodePort" .Values.services.dashboard.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services dashboard)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.services.dashboard.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w dashboard'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} dashboard --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  {{- with (index .Values.services.dashboard.ports 0) }}
  echo http://$SERVICE_IP:{{ .port }}
  {{- end }}
{{- else if contains "ClusterIP" .Values.services.dashboard.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ .Values.images.dashboard.name }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

You can view the recovery link for admin user by running the following command once all the pods are running:
{{- if .Release.IsInstall }}

kubectl logs -f --namespace {{ .Release.Namespace }} $(kubectl get pods --namespace {{ .Release.Namespace }} -l app.kubernetes.io/name='paralus' -o jsonpath='{ .items[0].metadata.name }') initialize | grep 'Org Admin default password:'
{{- else if .Values.deploy.postgresql.enable }}

kubectl exec -it "{{ .Release.Name }}-postgresql-0" --namespace {{ .Release.Namespace }} -- bash \
  -c "PGPASSWORD={{ include "ztka.dbPassword" . }} psql -h {{ include "ztka.dbAddr" . }} -U {{ include "ztka.dbUser" . }} {{ include "ztka.dbName" . }} \
-c \"select id from identities where traits->>'email' = '{{.Values.paralus.initialize.adminEmail}}' limit 1;\" -tA \
| xargs -I{} curl -X POST http://{{ .Release.Name }}-kratos-admin/recovery/link \
-H 'Content-Type: application/json' -d '{\"expires_in\":\"10m\",\"identity_id\":\"{}\"}'"
{{- end }}
